<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/26/2024 7:46:23 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="4E702DEACDF5502"
  DTS:CreatorName="4E702DEACDF5502\Administrator"
  DTS:DTSID="{1EE19BB0-203B-4456-92A3-4135B75157EA}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="16393"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="11"
  DTS:VersionGUID="{8AB95298-2C0D-4F18-8B7D-EE53D8B38859}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.SSIS.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2044502C-45E2-4AEA-8027-42588DC04D7C}"
      DTS:ObjectName="localhost.SSIS.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost;User ID=sa;Initial Catalog=SSIS;Provider=MSOLEDBSQL.1;Application Name=SSIS-Package1-{2044502C-45E2-4AEA-8027-42588DC04D7C}localhost.SSIS.sa;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAMeO3OwdkikyL1vYsYh5xkAAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAABCGJ1OqH8Wgb6MIyPxV170vDxsLh86QPp/tdJPgJmGEwAAAAAOgAAAAAIAACAAAAAPlrhg0QGq7h605/YO9q0l7ElufgBBv4pJ+0ImGM2y9iAAAABPfuOgAROgqoSJ863SEY6BkzZkPjKzrNaT7h7tfhT+a0AAAAAjm6RAJR2OT4bRa5rUpmwBAQt61iwx7pREYFnfhwaJZZRQA6LWbU/wXsCTZFVRwE4n80DHd/5AUoYd0Hyx8231</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{953a7938-f547-40d3-8d6d-95625513d5b0}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_c8cd098760894294b4977be6e1bf0d5e"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.IO;
#endregion

namespace ST_5e19636c399c445693df3a55218ed914
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */
        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain);
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            bool fireAgain = false;

            try
            {
                // Set variables
                string serverName = "localhost"; // Replace with your SQL Server instance name
                string databaseName = "SSIS"; // Replace with your database name
                string tableName = "cars"; // Replace with your table name
                string username = "sa"; // Replace with your SQL Server username
                string password = "pass@word1"; // Replace with your SQL Server password
                string connectionString = $"Data Source={serverName};Initial Catalog={databaseName};User ID={username};Password={password};";

                // Create SqlConnection using connection string
                using (SqlConnection conn = new SqlConnection(connectionString))
                {
                    conn.Open(); // Open the connection

                    // Get all CSV files in the specified directory
                    string filePath = @"D:\cars"; // Update filepath accordingly
                    string[] fileEntries = Directory.GetFiles(filePath, "*.csv");

                    // Process each file found
                    foreach (string fileName in fileEntries)
                    {
                        using (StreamReader sourceFile = new StreamReader(fileName))
                        {
                            string line;
                            int ctr = 0;

                            while ((line = sourceFile.ReadLine()) != null)
                            {
                                if (ctr != 0) // Skip header if present (assuming first line is header)
                                {
                                    line = line.Trim();

                                    // Split the line by comma and trim each field
                                    string[] values = line.Split(',');

                                    // Construct the SQL query (using parameterized query for safety)
                                    string query = $"INSERT INTO [dbo].[cars] (Make, Model, Type, DriveTrain, MSRP, Horsepower) " +
                                                   $"VALUES (@Make, @Model, @Type, @DriveTrain, @MSRP, @Horsepower)";

                                    // Execute SQL query with parameters
                                    using (SqlCommand sqlCommand = new SqlCommand(query, conn))
                                    {
                                        sqlCommand.Parameters.AddWithValue("@Make", values[0].Trim());
                                        sqlCommand.Parameters.AddWithValue("@Model", values[1].Trim());
                                        sqlCommand.Parameters.AddWithValue("@Type", values[2].Trim());
                                        sqlCommand.Parameters.AddWithValue("@DriveTrain", values[3].Trim());
                                        sqlCommand.Parameters.AddWithValue("@MSRP", values[4].Trim());
                                        sqlCommand.Parameters.AddWithValue("@Horsepower", values[5].Trim());

                                        sqlCommand.ExecuteNonQuery();
                                    }
                                }
                                ctr++;
                            }
                        }
                    }

                    // Perform GROUP BY and COUNT transformation
                    string groupByQuery = "SELECT Make, COUNT(*) AS CarCount FROM [dbo].[cars] GROUP BY Make";
                    using (SqlCommand groupByCommand = new SqlCommand(groupByQuery, conn))
                    {
                        using (SqlDataReader reader = groupByCommand.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                string make = reader["Make"].ToString();
                                int carCount = Convert.ToInt32(reader["CarCount"]);

                                // Log the result (you can replace this with any other action)
                                Dts.Events.FireInformation(0, "Car Count", $"Make: {make}, Count: {carCount}", "", 0, ref fireAgain);
                            }
                        }
                    }

                    // Set SSIS task result to success
                    Dts.TaskResult = (int)ScriptResults.Success;
                }
            }
            catch (Exception ex)
            {
                // Log error and set SSIS task result to failure
                Dts.Events.FireError(0, "Exception from Script Task", ex.Message + "\r" + ex.StackTrace, string.Empty, 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_c8cd098760894294b4977be6e1bf0d5e.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{BFBB4ACE-7242-4EA9-8432-79B389265F6F}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_5e19636c399c445693df3a55218ed914</RootNamespace><AssemblyName>ST_c8cd098760894294b4977be6e1bf0d5e</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_5e19636c399c445693df3a55218ed914</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_5e19636c399c445693df3a55218ed914</msb:DisplayName>
    <msb:ProjectId>{3498D4FC-D328-4531-B6CF-2F06C75E74A3}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c8cd098760894294b4977be6e1bf0d5e.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5e19636c399c445693df3a55218ed914.Properties.Settings.get_Default():ST_5e19636c399c445693df3a55218ed914.Properties.Sett" +
    "ings")]

namespace ST_5e19636c399c445693df3a55218ed914.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_5e19636c399c445693df3a55218ed914")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_5e19636c399c445693df3a55218ed914")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5e19636c399c445693df3a55218ed914.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5e19636c399c445693df3a55218ed914.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5e19636c399c445693df3a55218ed914.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_5e19636c399c445693df3a55218ed914.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_5e19636c399c445693df3a55218ed914.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_5e19636c399c445693df3a55218ed914.dll">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
DQMKAKECTwMKABABTwMOAG4EfAYGANMENgAOAGwAfAYOALcEfAYGAHwE0QMGAN0D0QMGAHwBNwUG
AFQG0QMGAO8EagUGAJkEIwQSAEwBigMSAK0BigMSACwBDgQGAGEBSgUGACkD0QMOAGEEhgQGALcG
NgAGAKUE0QMOAEoEfAYOABMFfAYOAGIAhgQGAKIA0QMGAOAENgAOAKoEhgQGAJIG0QMKAHgDTwMK
AP8ETwMGAAMA0QMGANsA0QMGAK4A0QMGAJ4GOAQAAAAALQAAAAAAAQABAAEAEADzAwkAOQABAAEA
AAAQAHEFzQVZAAEAAwAAARAABQbNBW0AAwAHAAMBAAAtBgAAUQAEAAoAEQDiA+AAEQAAAeQAEQCG
AOgABgZAAOwAVoAdBu8AVoDgAO8AUCAAAAAAhgD5AwYAAQCgIwAAAACGGCoFBgABAKgjAAAAAIMY
KgUGAAEAsCMAAAAAkwjrBPMAAQDcIwAAAACTCOgA+AABAOMjAAAAAJMI9AD9AAEA6yMAAAAAlghh
BgMBAgDyIwAAAACGGCoFBgACAPojAAAAAJEYMAUIAQIAAAABAAcDCQAqBQEAEQAqBQYAGQAqBQoA
KQAqBRAAMQAqBRAAOQAqBRAAQQAqBRAASQAqBRAAUQAqBRAAWQAqBRAAYQAqBRAAaQAqBQYAqQAq
BQYA0QAqBRUA4QAqBQYA6QBGBjgAeQAqBRAA8QDuAwYA+QD8BT4AgQAqBRAA6QDYA0UA6QBbBkkA
iQAqBVAAiQAOBlcACQH6Al0AGQGnBmUAIQFEAQYAKQHSAEUAiQDFBGkAMQHIA24AsQAnA0UAOQEB
AHMAcQAlBngAQQE7Bn4A6QBNBoQASQH+A4sAMQFdAJYAQQFtBgEAmQCWAEUAmQB3AEUA6QBGBpoA
6QDBBqEASQEgBaQAcQAqBQYAsQAqBQYAWQHAAK0AWQGaBrYAuQAqBbwA2QAqBQYACAAUANYACAAY
ANsAKQBzAEMBLgALABsBLgATACQBLgAbAEMBLgAjAEwBLgArAHUBLgAzAHUBLgA7AHUBLgBDAEwB
LgBLAHsBLgBTAHUBLgBbAJIBQwBjANsASQBzAEMBYQB7ANsAYwBrANsAGwADAAEABAADAAAA7wQM
AQAACAERAQAAZQYWAQIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAADiMNCAAAAAAAAAkA
AAAEAAAAAAAAAAAAAADEAFQAAAAAABAAAAAAAAAAAAAAAM0AMAMAAAAABAAAAAAAAAAAAAAAxABI
AAAAAAAEAAAAAAAAAAAAAADEANEDAAAAAAAAAAABAAAAewUAAAUAAgAAAABUb0ludDMyAFNUXzVl
MTk2MzZjMzk5YzQ0NTY5M2RmM2E1NTIxOGVkOTE0ADxNb2R1bGU+AFN5c3RlbS5JTwB2YWx1ZV9f
AFN5c3RlbS5EYXRhAG1zY29ybGliAFJlYWQARGJDb21tYW5kAFNxbENvbW1hbmQAZ2V0X1N0YWNr
VHJhY2UAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFJlYWRMaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNl
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRB
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAEFkZFdpdGhWYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3Ry
aW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2Rl
bABTVF81ZTE5NjM2YzM5OWM0NDU2OTNkZjNhNTUyMThlZDkxNC5kbGwAZ2V0X0l0ZW0AU3lzdGVt
AFRyaW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4ARmlyZUluZm9ybWF0aW9uAFN5
c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9u
AFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0
aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBDaGFyAERiRGF0YVJlYWRlcgBTcWxE
YXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIAU3RyZWFtUmVhZGVyAFRleHRSZWFkZXIAZ2V0X1Jlc291
cmNlTWFuYWdlcgBFdmVudHNPYmplY3RXcmFwcGVyAFNxbFBhcmFtZXRlcgBGaXJlRXJyb3IALmN0
b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNWUxOTYzNmMzOTljNDQ1NjkzZGYzYTU1MjE4ZWQ5MTQu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzVlMTk2MzZj
Mzk5YzQ0NTY5M2RmM2E1NTIxOGVkOTE0LlByb3BlcnRpZXMAR2V0RmlsZXMAU2V0dGluZ3MAZ2V0
X1BhcmFtZXRlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBDb25j
YXQARm9ybWF0AE9iamVjdABTcGxpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0u
RGF0YS5TcWxDbGllbnQAQ29udmVydABnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AERpcmVj
dG9yeQBFbXB0eQAAABNsAG8AYwBhAGwAaABvAHMAdAAACVMAUwBJAFMAAAVzAGEAABVwAGEAcwBz
AEAAdwBvAHIAZAAxAAAZRABhAHQAYQAgAFMAbwB1AHIAYwBlAD0AACM7AEkAbgBpAHQAaQBhAGwA
IABDAGEAdABhAGwAbwBnAD0AABM7AFUAcwBlAHIAIABJAEQAPQAAFTsAUABhAHMAcwB3AG8AcgBk
AD0AAAM7AAAPRAA6AFwAYwBhAHIAcwAACyoALgBjAHMAdgAAgRNJAE4AUwBFAFIAVAAgAEkATgBU
AE8AIABbAGQAYgBvAF0ALgBbAGMAYQByAHMAXQAgACgATQBhAGsAZQAsACAATQBvAGQAZQBsACwA
IABUAHkAcABlACwAIABEAHIAaQB2AGUAVAByAGEAaQBuACwAIABNAFMAUgBQACwAIABIAG8AcgBz
AGUAcABvAHcAZQByACkAIABWAEEATABVAEUAUwAgACgAQABNAGEAawBlACwAIABAAE0AbwBkAGUA
bAAsACAAQABUAHkAcABlACwAIABAAEQAcgBpAHYAZQBUAHIAYQBpAG4ALAAgAEAATQBTAFIAUAAs
ACAAQABIAG8AcgBzAGUAcABvAHcAZQByACkAAAtAAE0AYQBrAGUAAA1AAE0AbwBkAGUAbAAAC0AA
VAB5AHAAZQAAF0AARAByAGkAdgBlAFQAcgBhAGkAbgAAC0AATQBTAFIAUAAAF0AASABvAHIAcwBl
AHAAbwB3AGUAcgAAgINTAEUATABFAEMAVAAgAE0AYQBrAGUALAAgAEMATwBVAE4AVAAoACoAKQAg
AEEAUwAgAEMAYQByAEMAbwB1AG4AdAAgAEYAUgBPAE0AIABbAGQAYgBvAF0ALgBbAGMAYQByAHMA
XQAgAEcAUgBPAFUAUAAgAEIAWQAgAE0AYQBrAGUAAAlNAGEAawBlAAARQwBhAHIAQwBvAHUAbgB0
AAATQwBhAHIAIABDAG8AdQBuAHQAACtNAGEAawBlADoAIAB7ADAAfQAsACAAQwBvAHUAbgB0ADoA
IAB7ADEAfQAAAQA1RQB4AGMAZQBwAHQAaQBvAG4AIABmAHIAbwBtACAAUwBjAHIAaQBwAHQAIABU
AGEAcwBrAAADDQAAcVMAVABfADUAZQAxADkANgAzADYAYwAzADkAOQBjADQANAA1ADYAOQAzAGQA
ZgAzAGEANQA1ADIAMQA4AGUAZAA5ADEANAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAAAAAK0PNKBZKe0+tIyJkhRY/HgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQER
ZRwHEgIODg4OEj0dDggSQQ4IHQ4SRRJFEkkOCBJNBQABDh0OBgACHQ4ODgMgAA4GIAEdDh0DBiAC
AQ4SPQUgABKAhQcgAhKAiQ4cAyAACAQgABJJBCABHA4EAAEIHAUgABKAoQUgABKApQYAAw4OHBwK
IAYBCA4ODggQAgMgAAIGAAMODg4OAgYOCCAFAggODg4ICAABEoCtEYCxBSAAEoC1ByACAQ4SgLUI
t3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSXQMGEmEDBhIQAgYIAwYRFAQAABJdBAAAEmEF
AAEBEmEEAAASEAMAAAEECAASXQQIABJhBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzVlMTk2MzZjMzk5YzQ0NTY5M2RmM2E1NTIxOGVk
OTE0AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43tAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAHQ2AAAAAAAAAAAAAI42AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACANgAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAEAQAAAAAAAAAAAAAEAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAA0IDiMAAAEADQgOIz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAEwDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8ANQBlADEAOQA2ADMANgBjADMAOQA5AGMANAA0ADUANgA5ADMAZABmADMAYQA1ADUAMgAx
ADgAZQBkADkAMQA0AAAAPAAOAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgA
OQA3ADQALgAyADAANgAxAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA1
AGUAMQA5ADYAMwA2AGMAMwA5ADkAYwA0ADQANQA2ADkAMwBkAGYAMwBhADUANQAyADEAOABlAGQA
OQAxADQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfADUAZQAxADkANgAzADYAYwAzADkAOQBjADQANAA1ADYAOQAzAGQAZgAzAGEANQA1ADIA
MQA4AGUAZAA5ADEANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwA1AGUAMQA5ADYAMwA2AGMAMwA5ADkAYwA0ADQANQA2ADkAMwBkAGYAMwBhADUANQAyADEA
OABlAGQAOQAxADQAAABAAA4AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADgAOQA3ADQALgAyADAANgAxAAAARAAOAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4AOAA5ADcANAAuADIAMAA2ADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAKA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="134,42"
          Id="Package\Script Task"
          TopLeft="273,93" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>